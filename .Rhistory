Spruce <- read.csv("http://sites.google.com/site/chiharahesterberg/data2/Spruce.csv")
spruce.lm <- lm(Di.change ~ Ht.change, data = Spruce)
summary(spruce.lm)
#Diagnostics:Independence of Residuals? constant variance?
plot(spruce.lm$fit, rstudent(spruce.lm), ylab = "residuals")
abline(h = 0)
lines(smooth.spline(spruce.lm$fit, rstudent(spruce.lm), df = 3), col = "blue")
#Diagnostics: Normality of residuals?
qqnorm(rstudent(spruce.lm))
qqline(rstudent(spruce.lm))
Spruce <- read.csv("http://sites.google.com/site/chiharahesterberg/data2/Spruce.csv")
spruce.lm <- lm(Di.change ~ Ht.change, data = Spruce)
summary(spruce.lm)
tbl = table(Spruce$Di.change, Spruce$Ht.change)
chisq.test(tbl)
#Diagnostics:Independence of Residuals? constant variance?
plot(spruce.lm$fit, rstudent(spruce.lm), ylab = "residuals")
abline(h = 0)
lines(smooth.spline(spruce.lm$fit, rstudent(spruce.lm), df = 3), col = "blue")
#Diagnostics: Normality of residuals?
qqnorm(rstudent(spruce.lm))
qqline(rstudent(spruce.lm))
spruce <- read.csv("http://sites.google.com/site/chiharahesterberg/data2/spruce.csv")
spruce <- read.csv("http://sites.google.com/site/chiharahesterberg/data2/Spruce.csv")
spruce.lm <- lm(Di.change ~ Ht.change, data = spruce)
summary(spruce.lm)
tbl = table(spruce$Di.change, spruce$Ht.change)
chisq.test(tbl)
#Diagnostics:Independence of Residuals? constant variance?
plot(spruce.lm$fit, rstudent(spruce.lm), ylab = "residuals")
abline(h = 0)
lines(smooth.spline(spruce.lm$fit, rstudent(spruce.lm), df = 3), col = "blue")
#Diagnostics: Normality of residuals?
qqnorm(rstudent(spruce.lm))
qqline(rstudent(spruce.lm))
N <- 10^4
b.boot <- numeric(N)
a.boot <- numeric(N)
yPred.boot <- numeric(N)
n <- 24       #number of skaters
for (i in 1:N)
{
index <- sample(n, replace = TRUE)    #sample f rom 1, 2, ... n
spruce.boot <- spruce[index, ]
#recalculate linear model estimates
spruce.lm <- lm(Di.change ~ Ht.change, data = Skate.boot)
a.boot[i] <- coef(spruce.lm)[1]
b.boot[i] <- coef(spruce.lm)[2]    # new slope
yPred.boot[i] <- a.boot[i] + 32.1 * b.boot[i]  #recompute Y^ at x=60
}
N <- 10^4
b.boot <- numeric(N)
a.boot <- numeric(N)
yPred.boot <- numeric(N)
n <- 24       #number of skaters
for (i in 1:N)
{
index <- sample(n, replace = TRUE)    #sample f rom 1, 2, ... n
spruce.boot <- spruce[index, ]
#recalculate linear model estimates
spruce.lm <- lm(Di.change ~ Ht.change, data = spruce.boot)
a.boot[i] <- coef(spruce.lm)[1]
b.boot[i] <- coef(spruce.lm)[2]    # new slope
yPred.boot[i] <- a.boot[i] + 32.1 * b.boot[i]  #recompute Y^ at x=60
}
#slope analysis
mean(b.boot)
sd(b.boot)
quantile(b.boot, c(0.025, 0.975))
hist(b.boot, main = "Bootstrap distribuiton of beta_hat",
xlab = "beta_hat")
observed <- cor(spruce$Di.change, spruce$Ht.change)
abline(v = observed, col = "blue")    #add line at observed cor.
#95% prediction interval
summary(yPred.boot)
quantile(yPred.boot, c(0.025, 0.975))
#########
knitr::opts_chunk$set(echo = TRUE, out.width = "50%")
N <- 10^4
b.boot <- numeric(N)
a.boot <- numeric(N)
yPred.boot <- numeric(N)
n <- 24       #number of skaters
for (i in 1:N)
{
index <- sample(n, replace = TRUE)    #sample f rom 1, 2, ... n
Skate.boot <- Skating2010[index, ]
#recalculate linear model estimates
skateBoot.lm <- lm(Free ~ Short, data = Skate.boot)
a.boot[i] <- coef(skateBoot.lm)[1]
b.boot[i] <- coef(skateBoot.lm)[2]    # new slope
yPred.boot[i] <- a.boot[i] + 60 * b.boot[i]  #recompute Y^ at x=60
}
Skating2010 <- read.csv("http://sites.google.com/site/chiharahesterberg/data2/Skating2010.csv")
skate.lm <- lm(Free ~ Short, data = Skating2010)
qqnorm(resid(skate.lm))
qqline(resid(skate.lm))
summary(skate.lm)
N <- 10^4
b.boot <- numeric(N)
a.boot <- numeric(N)
yPred.boot <- numeric(N)
n <- 24       #number of skaters
for (i in 1:N)
{
index <- sample(n, replace = TRUE)    #sample f rom 1, 2, ... n
Skate.boot <- Skating2010[index, ]
#recalculate linear model estimates
skateBoot.lm <- lm(Free ~ Short, data = Skate.boot)
a.boot[i] <- coef(skateBoot.lm)[1]
b.boot[i] <- coef(skateBoot.lm)[2]    # new slope
yPred.boot[i] <- a.boot[i] + 60 * b.boot[i]  #recompute Y^ at x=60
}
#slope analysis
mean(b.boot)
sd(b.boot)
quantile(b.boot, c(0.025, 0.975))
hist(b.boot, main = "Bootstrap distribuiton of beta_hat",
xlab = "beta_hat")
observed <- cor(Skating2010$Short, Skating2010$Free)
abline(v = observed, col = "blue")    #add line at observed cor.
#95% prediction interval
summary(yPred.boot)
quantile(yPred.boot, c(0.025, 0.975))
#########
N <- 10^4
b.boot <- numeric(N)
a.boot <- numeric(N)
yPred.boot <- numeric(N)
n <- 24       #number of skaters
for (i in 1:N)
{
index <- sample(n, replace = TRUE)    #sample f rom 1, 2, ... n
spruce.boot <- spruce[index, ]
#recalculate linear model estimates
spruce.lm <- lm(Di.change ~ Ht.change, data = spruce.boot)
a.boot[i] <- coef(spruce.lm)[1]
b.boot[i] <- coef(spruce.lm)[2]    # new slope
yPred.boot[i] <- a.boot[i] + 32.1 * b.boot[i]  #recompute Y^ at x=60
}
#slope analysis
mean(b.boot)
sd(b.boot)
quantile(b.boot, c(0.025, 0.975))
hist(b.boot, main = "Bootstrap distribuiton of beta_hat",
xlab = "beta_hat")
observed <- cor(spruce$Di.change, spruce$Ht.change)
observed
abline(v = observed, col = "blue")    #add line at observed cor.
#95% prediction interval
summary(yPred.boot)
quantile(yPred.boot, c(0.025, 0.975))
#########
N <- 10^4
b.boot <- numeric(N)
a.boot <- numeric(N)
yPred.boot <- numeric(N)
n <- 24       #number of skaters
for (i in 1:N)
{
index <- sample(n, replace = TRUE)    #sample f rom 1, 2, ... n
spruce.boot <- spruce[index, ]
#recalculate linear model estimates
spruce.lm <- lm(Di.change ~ Ht.change, data = spruce.boot)
a.boot[i] <- coef(spruce.lm)[1]
b.boot[i] <- coef(spruce.lm)[2]    # new slope
yPred.boot[i] <- a.boot[i] + 32.1 * b.boot[i]  #recompute Y^ at x=60
}
#slope analysis
mean(b.boot)
sd(b.boot)
quantile(b.boot, c(0.025, 0.975))
hist(b.boot, main = "Bootstrap distribuiton of beta_hat",
xlab = "beta_hat")
observed <- cor(spruce$Di.change, spruce$Ht.change)
observed
abline(v = observed, col = "blue")    #add line at observed cor.
#95% prediction interval
summary(yPred.boot)
quantile(yPred.boot, c(0.025, 0.975))
#########
knitr::opts_chunk$set(echo = TRUE)
library(resampledata)
wafers
library(resampledata)
NIST
library(resampledata)
wafers
library(resampledata)
wafers
library(resampledata)
wafer = wafers
knitr::opts_chunk$set(echo = TRUE, out.width = "50%")
ILBoys <- read.csv("http://sites.google.com/site/chiharahesterberg/data2/ILBoys.csv")
head(ILBoys)
summary(ILBoys)
anova(lm(Weight ~ MothersAge, data = ILBoys))
hist(resid(lm(Weight ~ MothersAge, data = ILBoys)))
qqnorm(resid(lm(Weight ~ MothersAge, data = ILBoys)))
qqline(resid(lm(Weight ~ MothersAge, data = ILBoys)))
anova(lm(Weight ~ MothersAge, data = ILBoys))$F[1]
summary(aov(Weight ~ MothersAge, data = ILBoys))
#Which group/s cause/s the significant difference  in the means?
TukeyHSD(aov(Weight ~ MothersAge, data = ILBoys))
View(ILBoys)
library(resampledata)
ILBoys <- read.csv("http://sites.google.com/site/chiharahesterberg/data2/ILBoys.csv")
head(ILBoys)
summary(ILBoys)
library(resampledata)
ILBoys <- read.csv("http://sites.google.com/site/chiharahesterberg/data2/ILBoys.csv")
head(ILBoys)
summary(ILBoys)
anova(lm(Weight ∼ MothersAge, data = ILBoys))
library(resampledata)
ILBoys <- read.csv("http://sites.google.com/site/chiharahesterberg/data2/ILBoys.csv")
head(ILBoys)
summary(ILBoys)
anova(lm(Weight ∼ MothersAge, data = ILBoys))$coef
library(resampledata)
wafer = wafers
head(wafer)
summary(wafer)
anova(lm(Weight ∼ MothersAge, data = ILBoys))
View(wafer)
View(wafer)
library(resampledata)
wafer = wafers
head(wafer)
summary(wafer)
anova(lm(Instrument ∼ resistance, data = wafer))
library(resampledata)
wafer = wafers
head(wafer)
summary(wafer)
anova(lm(Instrument ∼ Resistance, data = wafer))
library(resampledata)
wafer = wafers
head(wafer)
summary(wafer)
wafer$Instrument = as.factor(wafer$Instrument)
anova(lm(Instrument ∼ Resistance, data = wafer))
library(resampledata)
wafer = wafers
head(wafer)
summary(wafer)
# wafer$Instrument = as.factor(wafer$Instrument)
anova(lm(Instrument ∼ Resistance, data = wafer))
library(resampledata)
wafer = wafers
head(wafer)
summary(wafer)
# wafer$Instrument = as.factor(wafer$Instrument)
anova(lm(as.factor(Instrument)) ∼ Resistance, data = wafer))
library(resampledata)
wafer = wafers
head(wafer)
summary(wafer)
# wafer$Instrument = as.factor(wafer$Instrument)
anova(lm(Instrument ∼ Resistance, data = wafer))
library(resampledata)
wafer = wafers
head(wafer)
summary(wafer)
wafer_lm = lm(as.factor(Instrument)~Resistance, data = wafer)
# wafer$Instrument = as.factor(wafer$Instrument)
anova(lm(Instrument ∼ Resistance, data = wafer))
library(resampledata)
wafer = wafers
head(wafer)
summary(wafer)
wafer_lm = lm(as.factor(Instrument)~Resistance, data = wafer)
wafer_lm
# wafer$Instrument = as.factor(wafer$Instrument)
wafer_anova = anova(lm(Instrument ∼ Resistance, data = wafer))
library(resampledata)
wafer = wafers
head(wafer)
summary(wafer)
wafer_lm = lm(Instrument~Resistance, data = wafer)
wafer_lm
# wafer$Instrument = as.factor(wafer$Instrument)
wafer_anova = anova(lm(Instrument ∼ Resistance, data = wafer))
library(resampledata)
wafer = wafers
head(wafer)
summary(wafer)
wafer_lm = lm(as.factor(Instrument))~Resistance, data = wafer)
library(resampledata)
wafer = wafers
head(wafer)
summary(wafer)
wafer_lm = lm(as.factor(Instrument)~Resistance, data = wafer)
wafer_lm
# wafer$Instrument = as.factor(wafer$Instrument)
wafer_anova = anova(lm(Instrument ∼ Resistance, data = wafer))
hist(resid(wafer_anova))
library(resampledata)
wafer = wafers
head(wafer)
summary(wafer)
wafer_lm = lm(as.factor(Instrument)~Resistance, data = wafer)
wafer_lm
# wafer$Instrument = as.factor(wafer$Instrument)
wafer_anova = anova(lm(Instrument ∼ Resistance, data = wafer))
hist(resid(lm(Instrument ∼ Resistance, data = wafer)))
qqnorm(resid(lm(Instrument ∼ Resistance, data = wafer)))
qqline(resid(lm(Instrument ∼ Resistance, data = wafer)))
library(resampledata)
wafer = wafers
head(wafer)
summary(wafer)
##afer_lm
# wafer$Instrument = as.factor(wafer$Instrument)
wafer_anova = anova(lm(Instrument ∼ Resistance, data = wafer))
hist(resid(lm(Instrument ∼ Resistance, data = wafer)))
qqnorm(resid(lm(Instrument ∼ Resistance, data = wafer)))
qqline(resid(lm(Instrument ∼ Resistance, data = wafer)))
library(resampledata)
wafer = wafers
head(wafer)
summary(wafer)
wafer_lm = lm(as.factor(Instrument)~Resistance, data = wafer)
wafer_lm
wafer_anova = anova(lm(Instrument ∼ Resistance, data = wafer))
hist(resid(lm(Instrument ∼ Resistance, data = wafer)))
qqnorm(resid(lm(Instrument ∼ Resistance, data = wafer)))
qqline(resid(lm(Instrument ∼ Resistance, data = wafer)))
wafer_anova = anova(lm(Instrument ∼ Resistance, data = wafer))
hist(resid(lm(as.factor(Instrument) ∼ Resistance, data = wafer)))
wafer_anova = anova(lm(Instrument ∼ Resistance, data = wafer))
hist(resid(lm(Instrument ∼ Resistance, data = wafer)))
qqnorm(resid(lm(Instrument ∼ Resistance, data = wafer)))
qqline(resid(lm(Instrument ∼ Resistance, data = wafer)))
wafer_anova = anova(lm(Instrument ∼ Resistance, data = wafer))
hist(resid(wafer_lm))
wafer_anova = anova(lm(Instrument ∼ Resistance, data = wafer))
hist(resid(lm(Instrument ∼ Resistance, data = wafer)))
qqnorm(resid(lm(Instrument ∼ Resistance, data = wafer)))
qqline(resid(lm(Instrument ∼ Resistance, data = wafer)))
anova(lm(Instrument ∼ Resistance, data = wafer))$F[1]
anova(lm(Instrument ∼ Resistance, data = wafer))$F
View(wafer_anova)
View(wafer_lm)
anova(lm(Instrument ∼ Resistance, data = wafer))$F[1]
View(wafer_anova)
F_Value = anova(lm(Instrument ∼ Resistance, data = wafer))$F[1]
F_Value
F_Value = anova(lm(Instrument ∼ Resistance, data = wafer))$F[1]
F_Value
summary(aov(Instrument ∼ Resistance, data = wafer))
F_Value = anova(lm(Instrument ∼ Resistance, data = wafer))$F[1]
F_Value
wafer_aov = summary(aov(Instrument ∼ Resistance, data = wafer))
wafer_aov
F_Value = anova(lm(Instrument ∼ Resistance, data = wafer))$F[1]
F_Value
wafer_aov = aov(Instrument ∼ Resistance, data = wafer)
wafer_aov
F_Value = anova(lm(Instrument ∼ Resistance, data = wafer))$F[1]
F_Value
wafer_aov = aov(Instrument ∼ Resistance, data = wafer)
summary(wafer_aov)
n = length(wafer$Instrument)
N = 10^5 - 1
result = numeric(N)
for(i in 1:N){
index = sample(n)
instrument_perm = wafer$Instrument[index]
result[i] = anova(lm(instrument_perm ~ Resistance, data = wafer))$F[1]
}
(sum(results >= F_value) + 1) / (N + 1)
n = length(wafer$Instrument)
N = 10^5 - 1
result = numeric(N)
for(i in 1:N){
index = sample(n)
instrument_perm = wafer$Instrument[index]
result[i] = anova(lm(instrument_perm ~ Resistance, data = wafer))$F[1]
}
(sum(result >= F_value) + 1) / (N + 1)
n = length(wafer$Instrument)
N = 10^5 - 1
result = numeric(N)
for(i in 1:N){
index = sample(n)
instrument_perm = wafer$Instrument[index]
result[i] = anova(lm(instrument_perm ~ Resistance, data = wafer))$F[1]
}
(sum(result >= F_value) + 1) / (N + 1)
F_value = anova(lm(Instrument ∼ Resistance, data = wafer))$F[1]
F_Value
wafer_aov = aov(Instrument ∼ Resistance, data = wafer)
summary(wafer_aov)
n = length(wafer$Instrument)
N = 10^5 - 1
result = numeric(N)
for(i in 1:N){
index = sample(n)
instrument_perm = wafer$Instrument[index]
result[i] = anova(lm(instrument_perm ~ Resistance, data = wafer))$F[1]
}
(sum(result >= F_value) + 1) / (N + 1)
source('~/.active-rstudio-document', echo=TRUE)
setwd("C:/Users/Thanh La/Downloads/Study/UHD/5.fall_2021/SA/research/BreastCancerResearch_F21")
source('C:/Users/Thanh La/Downloads/Study/UHD/5.fall_2021/SA/research/BreastCancerResearch_F21/test1.R', echo=TRUE)
source('C:/Users/Thanh La/Downloads/Study/UHD/5.fall_2021/SA/research/BreastCancerResearch_F21/test1.R', echo=TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(reshape2)
library(reshape)
library(ggplot2)
library(GGally)
library(ISLR)
library(caret)
library(cowplot)
library(MASS)
library(dplyr)
library(leaps)
workfile <- read.csv("data.csv")
numeric_workfile <- workfile[,3:32 ]
workfile$diagnosis = as.factor(workfile$diagnosis)
workfile = subset(workfile, select = -c(id))
index_set = sample(2, nrow(workfile), replace = T, prob = c(0.8, 0.2))
train_workfile = workfile[index_set == 1,]
test_workfile = workfile[index_set == 2,]
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(reshape2)
library(reshape)
library(ggplot2)
library(GGally)
library(ISLR)
library(caret)
library(cowplot)
library(MASS)
library(dplyr)
library(leaps)
workfile <- read.csv("data.csv")
numeric_workfile <- workfile[,3:32 ]
workfile$diagnosis = as.factor(workfile$diagnosis)
workfile = subset(workfile, select = -c(id))
index_set = sample(2, nrow(workfile), replace = T, prob = c(0.8, 0.2))
train_workfile = workfile[index_set == 1,]
test_workfile = workfile[index_set == 2,]
train_control = trainControl(method = "LOOCV", number = nrow(train_workfile))
workfile_glm = train(diagnosis ~ smoothness_worst + texture_worst +
symmetry_worst + compactness_se + concavity_mean + texture_se +
area_se + concave.points_worst + area_worst,
data = train_workfile,
method = "glm",
trControl = train_control,
family = binomial())
summary(workfile_glm)
workfile_glm = train(diagnosis ~ smoothness_worst + texture_worst +
symmetry_worst + compactness_se + concavity_mean + texture_se +
area_se + concave.points_worst + area_worst,
data = train_workfile,
method = "glm",
trControl = train_control,
family = binomial())
summary(workfile_glm)
workfile_glm = train(diagnosis ~ smoothness_worst + texture_worst +
symmetry_worst + compactness_se + concavity_mean + texture_se +
area_se + concave.points_worst + area_worst,
data = train_workfile,
method = "glm",
trControl = train_control,
family = binomial())
summary(workfile_glm)
y_hat = predict(workfile_glm, newdata = test_workfile)
y_hat = predict(workfile_glm, newdata = test_workfile)
confusionMatrix(y_hat, test_workfile$diagnosis)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(reshape2)
library(reshape)
library(ggplot2)
library(GGally)
library(ISLR)
library(caret)
library(cowplot)
library(MASS)
library(dplyr)
library(leaps)
workfile <- read.csv("data.csv")
numeric_workfile <- workfile[,3:32 ]
workfile$diagnosis = as.factor(workfile$diagnosis)
workfile = subset(workfile, select = -c(id))
index_set = sample(2, nrow(workfile), replace = T, prob = c(0.8, 0.2))
train_workfile = workfile[index_set == 1,]
test_workfile = workfile[index_set == 2,]
train_control = trainControl(method = "LOOCV", number = nrow(train_workfile))
workfile_glm = train(diagnosis ~ smoothness_worst + texture_worst +
symmetry_worst + compactness_se + concavity_mean + texture_se +
area_se + concave.points_worst + area_worst,
data = train_workfile,
method = "glm",
trControl = train_control,
family = binomial())
summary(workfile_glm)
y_hat = predict(workfile_glm, newdata = test_workfile)
confusionMatrix(y_hat, test_workfile$diagnosis)
test_workfile$predict_diagnosis = y_hat
test_workfile
test_workfile$predict_diagnosis = y_hat
test_workfile = test_workfile %>% dplyr::select(diagnosis, predict_diagnosis, everything())
test_workfile
knitr::opts_chunk$set(echo = TRUE)
req <- substitute(require(x, character.only = TRUE))
libs<-c("sjPlot", "ggplot2", "jtools", "car", "blorr", "DescTools", "MASS")
sapply(libs, function(x) eval(req) || {install.packages(x); eval(req)})
